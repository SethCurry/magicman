// Code generated by entc, DO NOT EDIT.

package ruling

const (
	// Label holds the string label denoting the ruling type in the database.
	Label = "ruling"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldText holds the string denoting the text field in the database.
	FieldText = "text"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// EdgeCard holds the string denoting the card edge name in mutations.
	EdgeCard = "card"
	// Table holds the table name of the ruling in the database.
	Table = "rulings"
	// CardTable is the table that holds the card relation/edge.
	CardTable = "rulings"
	// CardInverseTable is the table name for the Card entity.
	// It exists in this package in order to avoid circular dependency with the "card" package.
	CardInverseTable = "cards"
	// CardColumn is the table column denoting the card relation/edge.
	CardColumn = "card_rulings"
)

// Columns holds all SQL columns for ruling fields.
var Columns = []string{
	FieldID,
	FieldText,
	FieldDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "rulings"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"card_rulings",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
